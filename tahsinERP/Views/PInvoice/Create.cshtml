@model tahsinERP.ViewModels.PInvoiceViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var type = ViewBag.Type;
}

@if (tahsinERP.Models.RoleHelper.IsChangePermitted(User.Identity.Name, ViewContext.RouteData.Values["controller"].ToString(), ViewContext.RouteData.Values["action"].ToString(), type))
{
    <div class="app-content content">
        <div class="content-overlay"></div>
        <div class="content-wrapper">
            <div class="content-header row">
                <div class="content-header-left col-12 mb-2 mt-1">
                    <div class="row breadcrumbs-top">
                        <div class="col-12">
                            <div class="breadcrumb-wrapper col-12">
                                <ol class="breadcrumb rounded-pill breadcrumb-divider">
                                    <li class="breadcrumb-item">
                                        <a href="~/Home"><i class="bx bx-home-alt"></i></a>
                                    </li>
                                    <li class="breadcrumb-item">
                                        <a href="~/PInvoice/Index">Invoice lar</a>
                                    </li>
                                    <li class="breadcrumb-item active">
                                        Invoice
                                    </li>
                                </ol>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="content-body">
                <section id="form-repeater-wrapper">
                    <div class="row">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-content">
                                    <div class="card-body">
                                        @using (Html.BeginForm("Create", "PInvoice", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form repeater-default" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                            <div class="row justify-content-around d-flex align-items-start">
                                                <div class="col-lg-6 col-sm-12">
                                                    <div class="row">
                                                        <div class="col-md-6 col-12 form-group">
                                                            <label for="InvoiceNo">Invoice raqami</label>
                                                            @Html.TextBoxFor(model => model.InvoiceNo, new { @type = "text", @class = "form-control", @id = "InvoiceNo", @placeholder = "Invoice raqami" })
                                                            @Html.ValidationMessageFor(model => model.InvoiceNo, "", new { @class = "text-danger" })
                                                        </div>
                                                       @* <div class="col-md-6 col-12 form-group">
                                                            <label for="SupplierID">Ta`minotchi</label>
                                                            @Html.DropDownListFor(model => model.SupplierID, (SelectList)ViewBag.Supplier, new { @id = "SupplierID", @class = "form-control select2", onclick = "GetOrdersBySupplier()" })
                                                            @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-6 col-12 form-group">
                                                            <label for="OrderID">Buyurta raqami</label>
                                                            @Html.DropDownListFor(model => model.OrderID, (SelectList)ViewBag.POrder, new { @id = "OrderID", @class = "form-control select2" })
                                                            @Html.ValidationMessageFor(model => model.OrderID, "", new { @class = "text-danger" })
                                                        </div>*@
                                                        <div class="col-md-6 col-12 form-group">
                                                            <label for="SupplierID">Ta`minotchi</label>
                                                            @Html.DropDownListFor(model => model.SupplierID, (SelectList)ViewBag.Supplier, new { @class = "form-control", id = "SupplierID", onchange = "refreshdatatablesupplier()" })
                                                            @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-6 col-12 form-group">
                                                            <label for="ContractID">Shartnoma raqami</label>
                                                            @Html.DropDownListFor(model => model.OrderID, (SelectList)ViewBag.POrder, new { @class = "form-control", id = "OrderID" })
                                                            @Html.ValidationMessageFor(model => model.OrderID, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-lg-6 col-sm-12">
                                                    <div class="row">
                                                        <div class="col-md-6 col-12 form-group">
                                                            <label for="Currency">Valyuta</label>
                                                            @Html.TextBoxFor(model => model.Currency, new { @type = "text", @class = "form-control", @id = "Currency", @placeholder = "Valyuta" })
                                                            @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="col-md-6 col-12 form-group">
                                                            <label for="InvoiceDate">Invoice sanasi</label>
                                                            @Html.TextBoxFor(model => model.InvoiceDate, new { @class = "form-control pickadate-months-year round", @placeholder = "Invoice sanasi" })
                                                            @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                                                            <div class="form-control-position">
                                                                <i class='bx bx-calendar'></i>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <br />
                                            <h4>Ehtiyot qismlar</h4>
                                            <div data-repeater-list="Parts">
                                                <div data-repeater-item>
                                                    <div class="row justify-content-between">
                                                        <input type="hidden" name="ID" />
                                                        @*<div class="col-md-2 col-sm-12 form-group">
                                                            <label for="PartID">Ehtiyot qismni tanlang</label>
                                                            @Html.DropDownList("Parts[0].PartID", (SelectList)ViewBag.partList, new { @class = "form-control part-dropdown" })
                                                            @Html.ValidationMessageFor(model => model.Parts[0].PartID, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-2 col-sm-12 form-group">
                                                            <label for="UnitID">Birligi</label>
                                                            @Html.DropDownList("Parts[0].UnitID", (SelectList)ViewBag.units, new { @class = "form-control unit-dropdown" })
                                                            @Html.ValidationMessageFor(model => model.Parts[0].UnitID, "", new { @class = "text-danger" })*@
                                                        @*</div>
                                                        <div class="col-md-2 col-sm-12 form-group">
                                                            <label for="Quantuty">Soni</label>
                                                            <input type="number" name="Parts[0].Quantuty" class="form-control" id="Parts[0].Quantuty" placeholder="Soni" />
                                                            @Html.ValidationMessageFor(model => model.Parts[0].Quantuty, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-2 col-sm-12 form-group">
                                                            <label for="Price">Birlik narxi</label>
                                                            <input type="number" name="Parts[0].Price" step="0.01" class="form-control" id="Parts[0].Price" placeholder="Qism narxini kiriting" />
                                                            @Html.ValidationMessageFor(model => model.Parts[0].Price, "", new { @class = "text-danger" })
                                                        </div>*@

                                                        <div class="col-md-2 col-sm-12 form-group">
                                                            <label for="Part_PartID">Ehtiyot qismni tanlang</label>
                                                            @Html.DropDownList("PartID", (SelectList)ViewBag.partList, new { @class = "form-control", id = "PartID" })
                                                            @Html.ValidationMessageFor(model => model.Parts[0].PartID, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-2 col-sm-12 form-group">
                                                            <label for="Part_Unit">Birligi</label>
                                                            @Html.DropDownList("UnitID", (SelectList)ViewBag.units, new { @class = "form-control", id = "UnitID" })
                                                            @Html.ValidationMessageFor(model => model.Parts[0].UnitID, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-2 col-sm-12 form-group">
                                                            <label for="Part_Quantuty">Miqdori</label>
                                                            <input type="number" name="Quantuty" class="form-control" id="Part_Quantuty" />
                                                            @Html.ValidationMessageFor(model => model.Parts[0].Quantuty, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-2 col-sm-12 form-group">
                                                            <label for="Part_Price">Narx</label>
                                                            <input type="number" name="Price" step="0.001" class="form-control" id="Part_Price" />
                                                            @Html.ValidationMessageFor(model => model.Parts[0].Price, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="col-md-1 col-sm-12 form-group d-flex align-items-center pt-2">
                                                            <button data-repeater-delete type="button" class="btn btn-danger">O`chirish</button>
                                                        </div>
                                                    </div>
                                                    <hr>
                                                </div>
                                            </div>

                                            <button data-repeater-create type="button" class="btn btn-primary">Detall qo'shish</button>

                                            <ul class="list-group list-group-flush">
                                                <li class="list-group-item border-0 pb-0">
                                                    <button class="btn btn-primary btn-block subtotal-preview-btn" name="create" type="submit" value="Create">
                                                        <i class='bx bx-save'></i>
                                                        Saqlash
                                                    </button>
                                                </li>
                                            </ul>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>

    <script type="text/javascript">
    function refreshdatatablesupplier() {
        const supplierID = document.getElementById("SupplierID").value;
        $.ajax({
            url: '@Url.Action("GetOrdersBySupplier", "PInvoice")',
            type: 'GET',
            data: { supplierID: supplierID },
            success: function (data) {
                var contractDropdown = $("#OrderID");
                contractDropdown.empty();
                $.each(data, function (index, item) {
                    contractDropdown.append(new Option(item.Text, item.Value));
                });
            },
            error: function (xhr, status, error) {
                console.error("Error fetching contracts:", error);
            }
        });
    }

    $('#OrderID').change(function () {
        const contractID = $(this).val();
        console.log("Selected order ID:", orderID); // Debugging purpose

        $.ajax({
            url: '@Url.Action("GetPartsByOrder", "POrder")',
            type: 'GET',
            data: { contractID: contractID },
            success: function (data) {
                var partDropdown = $("#PartID");
                partDropdown.empty(); // Clear previous options

                $.each(data, function (index, item) {
                    partDropdown.append(new Option(item.Text, item.Value));
                });

                console.log("Parts dropdown updated successfully."); // Debugging purpose
            },
            error: function (xhr, status, error) {
                console.error("Error fetching parts:", error);
            }
        });
    });
    </script>
    @*<script type="text/javascript">
            function refreshdatatablesupplier() {
                const supplierID = $("#SupplierID").val();

                $.ajax({
                    url: '@Url.Action("GetOrdersBySupplier", "PInvoice")',
                    type: 'GET',
                    data: { supplierID: supplierID },
                    success: function (data) {
                        console.log("Orders fetched:", data);
                        var orderDropdown = $("#OrderID");
                        orderDropdown.empty();
                        $.each(data, function (index, item) {
                            orderDropdown.append(new Option(item.Text, item.Value));
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching orders:", error);
                    }
                });
            }

            $(document).ready(function () {
                // Bind change event on SupplierID dropdown
                $('#SupplierID').change(refreshdatatablesupplier);

                // Bind change event on dynamically added dropdowns
                $(document).on('change', '.part-dropdown', function () {
                    // Your logic for dynamically added part dropdowns if needed
                });

                $(document).on('change', '.unit-dropdown', function () {
                    // Your logic for dynamically added unit dropdowns if needed
                });
            });
        </script>*@

}
else
{
    Response.Redirect(Url.Action("Index", "ViewNotAuthorized"));
}
